/**
 ******************************************************************************
 * @file       tools.h
 * @author     yearnext
 * @version    1.0.0
 * @date       2017-1-10
 * @brief      ysf tools head file
 * @par        work platform
 *                 Windows
 * @par        compiler platform
 *                 GCC
 ******************************************************************************
 * @note
 * 1.XXXXX
 ******************************************************************************
 */

/**
 * @defgroup ysf tool component
 * @{
 */
/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef __YSF_COMMON_TOOLS_H__
#define __YSF_COMMON_TOOLS_H__

/* Add c++ compatibility------------------------------------------------------*/
#ifdef __cplusplus
extern "C"
{
#endif

/* Includes ------------------------------------------------------------------*/
/* Exported macro ------------------------------------------------------------*/
/**
 *******************************************************************************
 * @brief      YSF API USE STATUS CONFIG
 *******************************************************************************
 */
#define Name2String(name)                    (#name)

/**
 *******************************************************************************
 * @brief      YSF API USE STATUS CONFIG
 *******************************************************************************
 */
#define CalTypeByteSize(type)            (sizeof(type) / sizeof(unsigned char))

/**
 *******************************************************************************
 * @brief      YSF API USE STATUS CONFIG
 *******************************************************************************
 */
#define CalTypeBitSize(type)             (YSF_CalTypeByteSize(type) * 8)

/**
 *******************************************************************************
 * @brief      YSF API USE STATUS CONFIG
 *******************************************************************************
 */
#define CalRemainder(dividend,divisor)   ((dividend)%(divisor))

/**
 *******************************************************************************
 * @brief      YSF API USE STATUS CONFIG
 *******************************************************************************
 */
#define CheckRemainder(dividend,divisor) ((((dividend)%(divisor)) != 0 ) \
                                             ? (1) : (0))
                                             
/**@} */
/* Exported types ------------------------------------------------------------*/
/* Exported variables --------------------------------------------------------*/
/* Exported functions --------------------------------------------------------*/

#ifdef __cplusplus
}
#endif
	
#endif       /** end include define */

/** @}*/     /* ysf tool component  */

/**********************************END OF FILE*********************************/
